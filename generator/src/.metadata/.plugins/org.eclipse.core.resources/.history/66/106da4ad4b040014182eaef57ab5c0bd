/**
 * 
 */
package ch.heigvd.bachelor.crescenzio.generator.client;

import org.eclipse.scout.commons.annotations.FormData;
import org.eclipse.scout.commons.annotations.Order;
import org.eclipse.scout.commons.exception.ProcessingException;
import org.eclipse.scout.rt.client.ui.form.AbstractForm;
import org.eclipse.scout.rt.client.ui.form.AbstractFormHandler;
import org.eclipse.scout.rt.client.ui.form.fields.button.AbstractCancelButton;
import org.eclipse.scout.rt.client.ui.form.fields.button.AbstractOkButton;
import org.eclipse.scout.rt.client.ui.form.fields.groupbox.AbstractGroupBox;
import org.eclipse.scout.rt.client.ui.form.fields.stringfield.AbstractStringField;
import org.eclipse.scout.rt.shared.TEXTS;

import ch.heigvd.bachelor.crescenzio.generator.client.ConfigureServerForm.MainBox.CancelButton;
import ch.heigvd.bachelor.crescenzio.generator.client.ConfigureServerForm.MainBox.HostnameField;
import ch.heigvd.bachelor.crescenzio.generator.client.ConfigureServerForm.MainBox.OkButton;
import ch.heigvd.bachelor.crescenzio.generator.client.ConfigureServerForm.MainBox.ServerTypeField;
import ch.heigvd.bachelor.crescenzio.generator.shared.ConfigureServerFormData;

/**
 * @author Fabio
 */
@FormData(value = ConfigureServerFormData.class, sdkCommand = FormData.SdkCommand.CREATE)
public class ConfigureServerForm extends AbstractForm {

  private Long m_configureServerNr;

  /**
   * @throws org.eclipse.scout.commons.exception.ProcessingException
   */
  public ConfigureServerForm() throws ProcessingException {
    super();
  }

  /**
   * @return the ConfigureServerNr
   */
  @FormData
  public Long getConfigureServerNr() {
    return m_configureServerNr;
  }

  /**
   * @param configureServerNr
   *          the ConfigureServerNr to set
   */
  @FormData
  public void setConfigureServerNr(Long configureServerNr) {
    m_configureServerNr = configureServerNr;
  }

  @Override
  protected String getConfiguredTitle() {
    return TEXTS.get("ConfigureServer");
  }

  /**
   * @throws org.eclipse.scout.commons.exception.ProcessingException
   */
  public void startModify() throws ProcessingException {
    startInternal(new ModifyHandler());
  }

  /**
   * @throws org.eclipse.scout.commons.exception.ProcessingException
   */
  public void startNew() throws ProcessingException {
    startInternal(new NewHandler());
  }

  /**
   * @return the CancelButton
   */
  public CancelButton getCancelButton() {
    return getFieldByClass(CancelButton.class);
  }

  /**
   * @return the HostnameField
   */
  public HostnameField getHostnameField(){
    return getFieldByClass(HostnameField.class);
  }

  /**
   * @return the MainBox
   */
  public MainBox getMainBox() {
    return getFieldByClass(MainBox.class);
  }

  /**
   * @return the OkButton
   */
  public OkButton getOkButton() {
    return getFieldByClass(OkButton.class);
  }

  /**
   * @return the ServerTypeField
   */
  public ServerTypeField getServerTypeField(){
    return getFieldByClass(ServerTypeField.class);
  }

  @Order(10.0)
  public class MainBox extends AbstractGroupBox {

    @Order(10.0)
    public class HostnameField extends AbstractStringField {

      @Override
      protected String getConfiguredLabel() {
        return TEXTS.get("Hostname");
      }
    }

    @Order(20.0)
    public class ServerTypeField extends AbstractStringField {

      @Override
      protected String getConfiguredLabel() {
        return TEXTS.get("ServerType");
      }
    }

    @Order(30.0)
    public class OkButton extends AbstractOkButton {
    }

    @Order(40.0)
    public class CancelButton extends AbstractCancelButton {
    }
  }

  public class ModifyHandler extends AbstractFormHandler {
  }

  public class NewHandler extends AbstractFormHandler {
  }
}
